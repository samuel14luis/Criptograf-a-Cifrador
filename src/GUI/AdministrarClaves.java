package GUI;

import Claves.ClaveString;
import Interfaces.ClaveInterfaz;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Angello
 */
public class AdministrarClaves extends javax.swing.JFrame {

    /**
     * Creates new form ReguistroGUI
     *//*
    public RegistroGUI() {
        initComponents();
        setLocationRelativeTo(null);
        setVisible(true);
    }*/

     GUI gui;
    DefaultTableModel modelo;

    AdministrarClaves(GUI gui) {
        initComponents();
        modelo = (DefaultTableModel) jtblTabla.getModel();
        setLocationRelativeTo(null);
        setVisible(true);
        this.gui = gui;
        llenarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtblTabla = new javax.swing.JTable();
        jlblNombreClaveMatriz = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jbtnAbrir = new javax.swing.JButton();
        jbtnEliminar = new javax.swing.JButton();
        jbtnLimpiar = new javax.swing.JButton();
        jbtnLimpiar1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Administrador de Claves");
        setIconImage(getIconImage());
        setMinimumSize(new java.awt.Dimension(0, 392));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jtblTabla.setFont(new java.awt.Font("Corbel", 1, 14)); // NOI18N
        jtblTabla.setForeground(new java.awt.Color(51, 51, 51));
        jtblTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                { new Long(1), "Polybios Estándar", null}
            },
            new String [] {
                "ID", "Nombre", "Editable"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtblTabla.setGridColor(new java.awt.Color(153, 153, 153));
        jtblTabla.setSelectionBackground(new java.awt.Color(0, 153, 255));
        jtblTabla.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jtblTabla.setShowHorizontalLines(false);
        jtblTabla.setShowVerticalLines(false);
        jtblTabla.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jtblTabla);
        jtblTabla.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        jlblNombreClaveMatriz.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jlblNombreClaveMatriz.setForeground(new java.awt.Color(0, 153, 255));
        jlblNombreClaveMatriz.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlblNombreClaveMatriz.setText("Administrador de Claves");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jbtnAbrir.setText("Modificar Clave");
        jbtnAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAbrirActionPerformed(evt);
            }
        });

        jbtnEliminar.setText("Eliminar");
        jbtnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnEliminarActionPerformed(evt);
            }
        });

        jbtnLimpiar.setText("Limpiar Lista");
        jbtnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnLimpiarActionPerformed(evt);
            }
        });

        jbtnLimpiar1.setText("Actualizar Lista");
        jbtnLimpiar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnLimpiar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jbtnAbrir, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnLimpiar1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnAbrir)
                    .addComponent(jbtnEliminar)
                    .addComponent(jbtnLimpiar)
                    .addComponent(jbtnLimpiar1))
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jlblNombreClaveMatriz, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 822, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jlblNombreClaveMatriz)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAbrirActionPerformed
        if (jtblTabla.getSelectedRow() < 0) {
            gui.mostrarMensajeError("Selecciona una de las claves.");
        } else if (modelo.getRowCount() == 0) {
            GUI.mostrarMensaje("No tienes claves, añade una!");
        } else {
            gui.claves.get(jtblTabla.getSelectedRow()).modificarClave(gui);
            dispose();
        }
    }//GEN-LAST:event_jbtnAbrirActionPerformed

    private void jbtnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnLimpiarActionPerformed
        if (modelo.getRowCount() > 0) {
            gui.limpiarClaves(this);
        } else{
            gui.mostrarMensajeFavoritos("No tienes claves, añade una!");
        }

    }//GEN-LAST:event_jbtnLimpiarActionPerformed

    private void jbtnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnEliminarActionPerformed
        if (jtblTabla.getSelectedRow() < 0) {
            gui.mostrarMensajeError("Selecciona una clave para eliminar.");
        } else if (modelo.getRowCount() == 0) {
            gui.mostrarMensajeFavoritos("No tienes claves, añade una!");
        } else {
            gui.eliminarClave(jtblTabla.getSelectedRow(), this);
        }
    }//GEN-LAST:event_jbtnEliminarActionPerformed

    private void jbtnLimpiar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnLimpiar1ActionPerformed
        llenarTabla();
    }//GEN-LAST:event_jbtnLimpiar1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbtnAbrir;
    private javax.swing.JButton jbtnEliminar;
    private javax.swing.JButton jbtnLimpiar;
    private javax.swing.JButton jbtnLimpiar1;
    private javax.swing.JLabel jlblNombreClaveMatriz;
    private javax.swing.JTable jtblTabla;
    // End of variables declaration//GEN-END:variables

    public void llenarTabla() {
        limpiarTabla();
        ArrayList<ClaveInterfaz> claves = gui.claves;

        for (int i = 0; i < claves.size(); i++) {
            ClaveInterfaz x = claves.get(i);
            modelo.addRow(new Object[]{i + 1, x.getNombre(), x.isEditable()});
        }

    }

    private void limpiarTabla() {
        while (modelo.getRowCount() > 0) {
            modelo.removeRow(0);
        }
    }

    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().
                getImage(ClassLoader.getSystemResource("imagenes/icons8-Configuración de datos-25.png"));
        return retValue;
    }
}
